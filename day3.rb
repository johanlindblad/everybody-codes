input = "..........
..###.##..
...####...
..######..
..######..
...####...
.........."

input = "..............................
..............................
.............#................
.............##.#...#.........
..........#.#####...###.......
..........#########.#.........
.........############.........
.........##############.......
.........#############........
..........##.###.##...........
...........#...#.#............
...........#..................
..............................
.............................."

input = "......................................................................
......................................................................
......................................................................
......................................................................
.........................................##...........................
............................#...........#####.........................
............................#.....###########.........................
...........................##.#################.......................
.........................#######################......................
.....................##########################.......................
...................############################.......................
....................##############################....................
....................##############################....................
..................#.###############################...................
................###################################...................
.................##################################...................
.................################################.....................
.................##################..#############....................
.................##################################...................
..................#################################...................
..................#################################...................
..................################################....................
..................################################....................
...................#.#######################.....##...................
......................#######################.........................
........................#####################.........................
.......................##########################.....................
.......................#########################......................
..........................######################......................
.............................#..##..#########.#.......................
....................................########..........................
....................................########..........................
..........................................##..........................
......................................................................
......................................................................"

input = input.split("\n").map(&:chars)

level = Hash.new { 0 }
digs = 0

loop do
  dug = false

  0.upto(input.length - 1).each do |y|
    0.upto(input.first.length - 1).each do |x|
      next unless input[y][x] == "#"
      current_depth = level[[y, x]]

      can_dig = [[0, 1], [0, -1], [1, 0], [-1, 0]].map do |pair|
        dy, dx = pair
        [y + dy, x + dx]
      end.reject do |pair|
        yy, xx = pair
        yy < 0 || xx < 0 || yy >= input.length || xx >= input.first.length
      end.all? do |pair|
        level[pair] == current_depth || level[pair] == current_depth - 1
      end

      if can_dig
        level[[y, x]] -= 1
        dug = true
        digs += 1
      end
    end
  end

  break unless dug
end

puts digs

input = "..........
..###.##..
...####...
..######..
..######..
...####...
.........."

input = "########################..................................#............................................................#######################
#.######################.................................####............####...........................................####################.#
#########################...............................#####.#..####....####..#........................................######################
#######################................................#####..#..#####.#####..###..........................................###################
####################.##................................#####.##.###########...###.........................................####################
####################.#.................................####################...####........................................####################
####################...................................#####################.#####........................................####################
###################...................................###########################.....##...###............................####################
##################.................................#...##############################.##.######......................#####.###################
#################................................#####..######################################.........................#######################
#################..............................########.######################################.........................#######################
#################...............................##############################################.............................###################
################...............................#################################################..........................####################
##############................................###############################################................................####.#.##########
.############....................................############################################......................................###########
##########........................................############################################......................................##########
##########.........................................##########################################.......................................##########
##########........................................###########################################.......................................####..####
#.###.##.........................................#############################################......................................##.....##.
#..#.##.........................................##############################################.##..................................###....##..
#.....#........................................####################################################......................................###..
.................................................#################################################............................................
.................................................################################################.............................................
.................................................####################......#######################............................................
.............................................#######################.######.#######################...........................................
..............................................#####################.###..###.######################...........................................
................................................###################.###..###.#####################............................................
................................................####################.######.######################............................................
................................................#####################......#######################............................................
.#..............................................###################################################...........................................
##..............................................##################################################............................................
####..............................................################################################.....................................#.##...
####....##.........................................#.##############################################................................#...#######
######.####.......................................##############################################.................................###..########
##########........................................#..############################################................................#############
##########.####.......................................###########################################................................#############
###############.........................................####################################..####...............................#############
###############.#......................................#####################################...................................###############
##################.....................................#####################################.................................#################
##############..###..................................################################..######................................#.###############
###################..................................#################################...##...................................################
####################....................................##############################..........................................##############
####################.....................................#############################..........................................##############
#####################....................................###....####################............................................##############
#####################....................................#.........#############.##.............................................##############
####################..............................................############...#............................................#.##############
####################...............................................####..####................................................#################
###################................................................#.##......................................................#################
###################..................................................#........................................................################
####################.................................................#.....................................................#.#################
#.####################.....................................................................................................#################.#
######################.....................................................................................................###################"

input = input.split("\n").map(&:chars)

level = Hash.new { 0 }
digs = 0

loop do
  dug = false

  0.upto(input.length - 1).each do |y|
    0.upto(input.first.length - 1).each do |x|
      next unless input[y][x] == "#"
      current_depth = level[[y, x]]

      can_dig = [[0, 1], [0, -1], [1, 0], [-1, 0], [-1, -1], [1, 1], [-1, 1], [1, -1]].map do |pair|
        dy, dx = pair
        [y + dy, x + dx]
      end.reject do |pair|
        yy, xx = pair
        #yy < 0 || xx < 0 || yy >= input.length || xx >= input.first.length
        false
      end.all? do |pair|
        level[pair] == current_depth || level[pair] == current_depth - 1
      end

      if can_dig
        level[[y, x]] -= 1
        dug = true
        digs += 1
      end
    end
  end

  break unless dug
end

puts digs
